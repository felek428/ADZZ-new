#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ADZZ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BazaZwierzat")]
	public partial class PolaczenieBazaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertHistoria_cen(Historia_cen instance);
    partial void UpdateHistoria_cen(Historia_cen instance);
    partial void DeleteHistoria_cen(Historia_cen instance);
    partial void InsertHistoria_Stada(Historia_Stada instance);
    partial void UpdateHistoria_Stada(Historia_Stada instance);
    partial void DeleteHistoria_Stada(Historia_Stada instance);
    partial void InsertKategoria_rozliczen(Kategoria_rozliczen instance);
    partial void UpdateKategoria_rozliczen(Kategoria_rozliczen instance);
    partial void DeleteKategoria_rozliczen(Kategoria_rozliczen instance);
    partial void InsertRasa(Rasa instance);
    partial void UpdateRasa(Rasa instance);
    partial void DeleteRasa(Rasa instance);
    partial void InsertStado(Stado instance);
    partial void UpdateStado(Stado instance);
    partial void DeleteStado(Stado instance);
    partial void InsertZwierze(Zwierze instance);
    partial void UpdateZwierze(Zwierze instance);
    partial void DeleteZwierze(Zwierze instance);
    partial void InsertRozrod(Rozrod instance);
    partial void UpdateRozrod(Rozrod instance);
    partial void DeleteRozrod(Rozrod instance);
    partial void InsertRozliczenia(Rozliczenia instance);
    partial void UpdateRozliczenia(Rozliczenia instance);
    partial void DeleteRozliczenia(Rozliczenia instance);
    partial void InsertGatunek(Gatunek instance);
    partial void UpdateGatunek(Gatunek instance);
    partial void DeleteGatunek(Gatunek instance);
    #endregion
		
		public PolaczenieBazaDataContext() : 
				base(global::ADZZ.Properties.Settings.Default.BazaZwierzatConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public PolaczenieBazaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PolaczenieBazaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PolaczenieBazaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PolaczenieBazaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Historia_cen> Historia_cen
		{
			get
			{
				return this.GetTable<Historia_cen>();
			}
		}
		
		public System.Data.Linq.Table<Historia_Stada> Historia_Stada
		{
			get
			{
				return this.GetTable<Historia_Stada>();
			}
		}
		
		public System.Data.Linq.Table<Kategoria_rozliczen> Kategoria_rozliczen
		{
			get
			{
				return this.GetTable<Kategoria_rozliczen>();
			}
		}
		
		public System.Data.Linq.Table<Rasa> Rasa
		{
			get
			{
				return this.GetTable<Rasa>();
			}
		}
		
		public System.Data.Linq.Table<Stado> Stado
		{
			get
			{
				return this.GetTable<Stado>();
			}
		}
		
		public System.Data.Linq.Table<Zwierze> Zwierze
		{
			get
			{
				return this.GetTable<Zwierze>();
			}
		}
		
		public System.Data.Linq.Table<Rozrod> Rozrod
		{
			get
			{
				return this.GetTable<Rozrod>();
			}
		}
		
		public System.Data.Linq.Table<Rozliczenia> Rozliczenia
		{
			get
			{
				return this.GetTable<Rozliczenia>();
			}
		}
		
		public System.Data.Linq.Table<Gatunek> Gatunek
		{
			get
			{
				return this.GetTable<Gatunek>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Historia_cen")]
	public partial class Historia_cen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<double> _cena;
		
		private System.Nullable<System.DateTime> _okres_od;
		
		private System.Nullable<System.DateTime> _okres_do;
		
		private System.Nullable<int> _id_kategoria_rozliczen;
		
		private EntityRef<Kategoria_rozliczen> _Kategoria_rozliczen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OncenaChanging(System.Nullable<double> value);
    partial void OncenaChanged();
    partial void Onokres_odChanging(System.Nullable<System.DateTime> value);
    partial void Onokres_odChanged();
    partial void Onokres_doChanging(System.Nullable<System.DateTime> value);
    partial void Onokres_doChanged();
    partial void Onid_kategoria_rozliczenChanging(System.Nullable<int> value);
    partial void Onid_kategoria_rozliczenChanged();
    #endregion
		
		public Historia_cen()
		{
			this._Kategoria_rozliczen = default(EntityRef<Kategoria_rozliczen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cena", DbType="Float")]
		public System.Nullable<double> cena
		{
			get
			{
				return this._cena;
			}
			set
			{
				if ((this._cena != value))
				{
					this.OncenaChanging(value);
					this.SendPropertyChanging();
					this._cena = value;
					this.SendPropertyChanged("cena");
					this.OncenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_okres_od", DbType="Date")]
		public System.Nullable<System.DateTime> okres_od
		{
			get
			{
				return this._okres_od;
			}
			set
			{
				if ((this._okres_od != value))
				{
					this.Onokres_odChanging(value);
					this.SendPropertyChanging();
					this._okres_od = value;
					this.SendPropertyChanged("okres_od");
					this.Onokres_odChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_okres_do", DbType="Date")]
		public System.Nullable<System.DateTime> okres_do
		{
			get
			{
				return this._okres_do;
			}
			set
			{
				if ((this._okres_do != value))
				{
					this.Onokres_doChanging(value);
					this.SendPropertyChanging();
					this._okres_do = value;
					this.SendPropertyChanged("okres_do");
					this.Onokres_doChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_kategoria_rozliczen", DbType="Int")]
		public System.Nullable<int> id_kategoria_rozliczen
		{
			get
			{
				return this._id_kategoria_rozliczen;
			}
			set
			{
				if ((this._id_kategoria_rozliczen != value))
				{
					if (this._Kategoria_rozliczen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_kategoria_rozliczenChanging(value);
					this.SendPropertyChanging();
					this._id_kategoria_rozliczen = value;
					this.SendPropertyChanged("id_kategoria_rozliczen");
					this.Onid_kategoria_rozliczenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategoria_rozliczen_Historia_cen", Storage="_Kategoria_rozliczen", ThisKey="id_kategoria_rozliczen", OtherKey="Id", IsForeignKey=true)]
		public Kategoria_rozliczen Kategoria_rozliczen
		{
			get
			{
				return this._Kategoria_rozliczen.Entity;
			}
			set
			{
				Kategoria_rozliczen previousValue = this._Kategoria_rozliczen.Entity;
				if (((previousValue != value) 
							|| (this._Kategoria_rozliczen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kategoria_rozliczen.Entity = null;
						previousValue.Historia_cen.Remove(this);
					}
					this._Kategoria_rozliczen.Entity = value;
					if ((value != null))
					{
						value.Historia_cen.Add(this);
						this._id_kategoria_rozliczen = value.Id;
					}
					else
					{
						this._id_kategoria_rozliczen = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kategoria_rozliczen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Historia_Stada")]
	public partial class Historia_Stada : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _okres_od;
		
		private System.Nullable<System.DateTime> _okres_do;
		
		private System.Nullable<short> _ilosc;
		
		private EntitySet<Stado> _Stado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Onokres_odChanging(System.Nullable<System.DateTime> value);
    partial void Onokres_odChanged();
    partial void Onokres_doChanging(System.Nullable<System.DateTime> value);
    partial void Onokres_doChanged();
    partial void OniloscChanging(System.Nullable<short> value);
    partial void OniloscChanged();
    #endregion
		
		public Historia_Stada()
		{
			this._Stado = new EntitySet<Stado>(new Action<Stado>(this.attach_Stado), new Action<Stado>(this.detach_Stado));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_okres_od", DbType="Date")]
		public System.Nullable<System.DateTime> okres_od
		{
			get
			{
				return this._okres_od;
			}
			set
			{
				if ((this._okres_od != value))
				{
					this.Onokres_odChanging(value);
					this.SendPropertyChanging();
					this._okres_od = value;
					this.SendPropertyChanged("okres_od");
					this.Onokres_odChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_okres_do", DbType="Date")]
		public System.Nullable<System.DateTime> okres_do
		{
			get
			{
				return this._okres_do;
			}
			set
			{
				if ((this._okres_do != value))
				{
					this.Onokres_doChanging(value);
					this.SendPropertyChanging();
					this._okres_do = value;
					this.SendPropertyChanged("okres_do");
					this.Onokres_doChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ilosc", DbType="SmallInt")]
		public System.Nullable<short> ilosc
		{
			get
			{
				return this._ilosc;
			}
			set
			{
				if ((this._ilosc != value))
				{
					this.OniloscChanging(value);
					this.SendPropertyChanging();
					this._ilosc = value;
					this.SendPropertyChanged("ilosc");
					this.OniloscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Historia_Stada_Stado", Storage="_Stado", ThisKey="Id", OtherKey="id_historia")]
		public EntitySet<Stado> Stado
		{
			get
			{
				return this._Stado;
			}
			set
			{
				this._Stado.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Stado(Stado entity)
		{
			this.SendPropertyChanging();
			entity.Historia_Stada = this;
		}
		
		private void detach_Stado(Stado entity)
		{
			this.SendPropertyChanging();
			entity.Historia_Stada = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kategoria_rozliczen")]
	public partial class Kategoria_rozliczen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _nazwa;
		
		private System.Nullable<byte> _czyPrzychod;
		
		private EntitySet<Historia_cen> _Historia_cen;
		
		private EntitySet<Rozliczenia> _Rozliczenia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnazwaChanging(string value);
    partial void OnnazwaChanged();
    partial void OnczyPrzychodChanging(System.Nullable<byte> value);
    partial void OnczyPrzychodChanged();
    #endregion
		
		public Kategoria_rozliczen()
		{
			this._Historia_cen = new EntitySet<Historia_cen>(new Action<Historia_cen>(this.attach_Historia_cen), new Action<Historia_cen>(this.detach_Historia_cen));
			this._Rozliczenia = new EntitySet<Rozliczenia>(new Action<Rozliczenia>(this.attach_Rozliczenia), new Action<Rozliczenia>(this.detach_Rozliczenia));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa", DbType="VarChar(30)")]
		public string nazwa
		{
			get
			{
				return this._nazwa;
			}
			set
			{
				if ((this._nazwa != value))
				{
					this.OnnazwaChanging(value);
					this.SendPropertyChanging();
					this._nazwa = value;
					this.SendPropertyChanged("nazwa");
					this.OnnazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_czyPrzychod", DbType="TinyInt")]
		public System.Nullable<byte> czyPrzychod
		{
			get
			{
				return this._czyPrzychod;
			}
			set
			{
				if ((this._czyPrzychod != value))
				{
					this.OnczyPrzychodChanging(value);
					this.SendPropertyChanging();
					this._czyPrzychod = value;
					this.SendPropertyChanged("czyPrzychod");
					this.OnczyPrzychodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategoria_rozliczen_Historia_cen", Storage="_Historia_cen", ThisKey="Id", OtherKey="id_kategoria_rozliczen")]
		public EntitySet<Historia_cen> Historia_cen
		{
			get
			{
				return this._Historia_cen;
			}
			set
			{
				this._Historia_cen.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategoria_rozliczen_Rozliczenia", Storage="_Rozliczenia", ThisKey="Id", OtherKey="id_kategoria")]
		public EntitySet<Rozliczenia> Rozliczenia
		{
			get
			{
				return this._Rozliczenia;
			}
			set
			{
				this._Rozliczenia.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Historia_cen(Historia_cen entity)
		{
			this.SendPropertyChanging();
			entity.Kategoria_rozliczen = this;
		}
		
		private void detach_Historia_cen(Historia_cen entity)
		{
			this.SendPropertyChanging();
			entity.Kategoria_rozliczen = null;
		}
		
		private void attach_Rozliczenia(Rozliczenia entity)
		{
			this.SendPropertyChanging();
			entity.Kategoria_rozliczen = this;
		}
		
		private void detach_Rozliczenia(Rozliczenia entity)
		{
			this.SendPropertyChanging();
			entity.Kategoria_rozliczen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rasa")]
	public partial class Rasa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _nazwa;
		
		private System.Nullable<int> _id_gatunek;
		
		private EntitySet<Zwierze> _Zwierze;
		
		private EntityRef<Gatunek> _Gatunek;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnazwaChanging(string value);
    partial void OnnazwaChanged();
    partial void Onid_gatunekChanging(System.Nullable<int> value);
    partial void Onid_gatunekChanged();
    #endregion
		
		public Rasa()
		{
			this._Zwierze = new EntitySet<Zwierze>(new Action<Zwierze>(this.attach_Zwierze), new Action<Zwierze>(this.detach_Zwierze));
			this._Gatunek = default(EntityRef<Gatunek>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa", DbType="VarChar(30)")]
		public string nazwa
		{
			get
			{
				return this._nazwa;
			}
			set
			{
				if ((this._nazwa != value))
				{
					this.OnnazwaChanging(value);
					this.SendPropertyChanging();
					this._nazwa = value;
					this.SendPropertyChanged("nazwa");
					this.OnnazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_gatunek", DbType="Int")]
		public System.Nullable<int> id_gatunek
		{
			get
			{
				return this._id_gatunek;
			}
			set
			{
				if ((this._id_gatunek != value))
				{
					if (this._Gatunek.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_gatunekChanging(value);
					this.SendPropertyChanging();
					this._id_gatunek = value;
					this.SendPropertyChanged("id_gatunek");
					this.Onid_gatunekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rasa_Zwierze", Storage="_Zwierze", ThisKey="Id", OtherKey="id_rasa")]
		public EntitySet<Zwierze> Zwierze
		{
			get
			{
				return this._Zwierze;
			}
			set
			{
				this._Zwierze.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gatunek_Rasa", Storage="_Gatunek", ThisKey="id_gatunek", OtherKey="Id", IsForeignKey=true)]
		public Gatunek Gatunek
		{
			get
			{
				return this._Gatunek.Entity;
			}
			set
			{
				Gatunek previousValue = this._Gatunek.Entity;
				if (((previousValue != value) 
							|| (this._Gatunek.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gatunek.Entity = null;
						previousValue.Rasa.Remove(this);
					}
					this._Gatunek.Entity = value;
					if ((value != null))
					{
						value.Rasa.Add(this);
						this._id_gatunek = value.Id;
					}
					else
					{
						this._id_gatunek = default(Nullable<int>);
					}
					this.SendPropertyChanged("Gatunek");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Zwierze(Zwierze entity)
		{
			this.SendPropertyChanging();
			entity.Rasa = this;
		}
		
		private void detach_Zwierze(Zwierze entity)
		{
			this.SendPropertyChanging();
			entity.Rasa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stado")]
	public partial class Stado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _nr_stada;
		
		private System.Nullable<int> _id_gatunek;
		
		private System.Nullable<int> _id_historia;
		
		private EntitySet<Rozliczenia> _Rozliczenia;
		
		private EntityRef<Historia_Stada> _Historia_Stada;
		
		private EntityRef<Gatunek> _Gatunek;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Onnr_stadaChanging(string value);
    partial void Onnr_stadaChanged();
    partial void Onid_gatunekChanging(System.Nullable<int> value);
    partial void Onid_gatunekChanged();
    partial void Onid_historiaChanging(System.Nullable<int> value);
    partial void Onid_historiaChanged();
    #endregion
		
		public Stado()
		{
			this._Rozliczenia = new EntitySet<Rozliczenia>(new Action<Rozliczenia>(this.attach_Rozliczenia), new Action<Rozliczenia>(this.detach_Rozliczenia));
			this._Historia_Stada = default(EntityRef<Historia_Stada>);
			this._Gatunek = default(EntityRef<Gatunek>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nr_stada", DbType="VarChar(15)")]
		public string nr_stada
		{
			get
			{
				return this._nr_stada;
			}
			set
			{
				if ((this._nr_stada != value))
				{
					this.Onnr_stadaChanging(value);
					this.SendPropertyChanging();
					this._nr_stada = value;
					this.SendPropertyChanged("nr_stada");
					this.Onnr_stadaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_gatunek", DbType="Int")]
		public System.Nullable<int> id_gatunek
		{
			get
			{
				return this._id_gatunek;
			}
			set
			{
				if ((this._id_gatunek != value))
				{
					if (this._Gatunek.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_gatunekChanging(value);
					this.SendPropertyChanging();
					this._id_gatunek = value;
					this.SendPropertyChanged("id_gatunek");
					this.Onid_gatunekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_historia", DbType="Int")]
		public System.Nullable<int> id_historia
		{
			get
			{
				return this._id_historia;
			}
			set
			{
				if ((this._id_historia != value))
				{
					if (this._Historia_Stada.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_historiaChanging(value);
					this.SendPropertyChanging();
					this._id_historia = value;
					this.SendPropertyChanged("id_historia");
					this.Onid_historiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stado_Rozliczenia", Storage="_Rozliczenia", ThisKey="Id", OtherKey="id_stado")]
		public EntitySet<Rozliczenia> Rozliczenia
		{
			get
			{
				return this._Rozliczenia;
			}
			set
			{
				this._Rozliczenia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Historia_Stada_Stado", Storage="_Historia_Stada", ThisKey="id_historia", OtherKey="Id", IsForeignKey=true)]
		public Historia_Stada Historia_Stada
		{
			get
			{
				return this._Historia_Stada.Entity;
			}
			set
			{
				Historia_Stada previousValue = this._Historia_Stada.Entity;
				if (((previousValue != value) 
							|| (this._Historia_Stada.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Historia_Stada.Entity = null;
						previousValue.Stado.Remove(this);
					}
					this._Historia_Stada.Entity = value;
					if ((value != null))
					{
						value.Stado.Add(this);
						this._id_historia = value.Id;
					}
					else
					{
						this._id_historia = default(Nullable<int>);
					}
					this.SendPropertyChanged("Historia_Stada");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gatunek_Stado", Storage="_Gatunek", ThisKey="id_gatunek", OtherKey="Id", IsForeignKey=true)]
		public Gatunek Gatunek
		{
			get
			{
				return this._Gatunek.Entity;
			}
			set
			{
				Gatunek previousValue = this._Gatunek.Entity;
				if (((previousValue != value) 
							|| (this._Gatunek.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gatunek.Entity = null;
						previousValue.Stado.Remove(this);
					}
					this._Gatunek.Entity = value;
					if ((value != null))
					{
						value.Stado.Add(this);
						this._id_gatunek = value.Id;
					}
					else
					{
						this._id_gatunek = default(Nullable<int>);
					}
					this.SendPropertyChanged("Gatunek");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rozliczenia(Rozliczenia entity)
		{
			this.SendPropertyChanging();
			entity.Stado = this;
		}
		
		private void detach_Rozliczenia(Rozliczenia entity)
		{
			this.SendPropertyChanging();
			entity.Stado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zwierze")]
	public partial class Zwierze : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _data_urodzenia;
		
		private string _nr_kolczyka;
		
		private System.Nullable<byte> _plec;
		
		private System.Nullable<System.DateTime> _okres_od;
		
		private System.Nullable<System.DateTime> _okres_do;
		
		private System.Nullable<int> _id_rasa;
		
		private EntitySet<Rozrod> _Rozrod;
		
		private EntitySet<Rozliczenia> _Rozliczenia;
		
		private EntityRef<Rasa> _Rasa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Ondata_urodzeniaChanging(System.Nullable<System.DateTime> value);
    partial void Ondata_urodzeniaChanged();
    partial void Onnr_kolczykaChanging(string value);
    partial void Onnr_kolczykaChanged();
    partial void OnplecChanging(System.Nullable<byte> value);
    partial void OnplecChanged();
    partial void Onokres_odChanging(System.Nullable<System.DateTime> value);
    partial void Onokres_odChanged();
    partial void Onokres_doChanging(System.Nullable<System.DateTime> value);
    partial void Onokres_doChanged();
    partial void Onid_rasaChanging(System.Nullable<int> value);
    partial void Onid_rasaChanged();
    #endregion
		
		public Zwierze()
		{
			this._Rozrod = new EntitySet<Rozrod>(new Action<Rozrod>(this.attach_Rozrod), new Action<Rozrod>(this.detach_Rozrod));
			this._Rozliczenia = new EntitySet<Rozliczenia>(new Action<Rozliczenia>(this.attach_Rozliczenia), new Action<Rozliczenia>(this.detach_Rozliczenia));
			this._Rasa = default(EntityRef<Rasa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_urodzenia", DbType="Date")]
		public System.Nullable<System.DateTime> data_urodzenia
		{
			get
			{
				return this._data_urodzenia;
			}
			set
			{
				if ((this._data_urodzenia != value))
				{
					this.Ondata_urodzeniaChanging(value);
					this.SendPropertyChanging();
					this._data_urodzenia = value;
					this.SendPropertyChanged("data_urodzenia");
					this.Ondata_urodzeniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nr_kolczyka", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string nr_kolczyka
		{
			get
			{
				return this._nr_kolczyka;
			}
			set
			{
				if ((this._nr_kolczyka != value))
				{
					this.Onnr_kolczykaChanging(value);
					this.SendPropertyChanging();
					this._nr_kolczyka = value;
					this.SendPropertyChanged("nr_kolczyka");
					this.Onnr_kolczykaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_plec", DbType="TinyInt")]
		public System.Nullable<byte> plec
		{
			get
			{
				return this._plec;
			}
			set
			{
				if ((this._plec != value))
				{
					this.OnplecChanging(value);
					this.SendPropertyChanging();
					this._plec = value;
					this.SendPropertyChanged("plec");
					this.OnplecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_okres_od", DbType="Date")]
		public System.Nullable<System.DateTime> okres_od
		{
			get
			{
				return this._okres_od;
			}
			set
			{
				if ((this._okres_od != value))
				{
					this.Onokres_odChanging(value);
					this.SendPropertyChanging();
					this._okres_od = value;
					this.SendPropertyChanged("okres_od");
					this.Onokres_odChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_okres_do", DbType="Date")]
		public System.Nullable<System.DateTime> okres_do
		{
			get
			{
				return this._okres_do;
			}
			set
			{
				if ((this._okres_do != value))
				{
					this.Onokres_doChanging(value);
					this.SendPropertyChanging();
					this._okres_do = value;
					this.SendPropertyChanged("okres_do");
					this.Onokres_doChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rasa", DbType="Int")]
		public System.Nullable<int> id_rasa
		{
			get
			{
				return this._id_rasa;
			}
			set
			{
				if ((this._id_rasa != value))
				{
					if (this._Rasa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_rasaChanging(value);
					this.SendPropertyChanging();
					this._id_rasa = value;
					this.SendPropertyChanged("id_rasa");
					this.Onid_rasaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zwierze_Rozrod", Storage="_Rozrod", ThisKey="Id", OtherKey="id_zwierze")]
		public EntitySet<Rozrod> Rozrod
		{
			get
			{
				return this._Rozrod;
			}
			set
			{
				this._Rozrod.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zwierze_Rozliczenia", Storage="_Rozliczenia", ThisKey="Id", OtherKey="id_zwierze")]
		public EntitySet<Rozliczenia> Rozliczenia
		{
			get
			{
				return this._Rozliczenia;
			}
			set
			{
				this._Rozliczenia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rasa_Zwierze", Storage="_Rasa", ThisKey="id_rasa", OtherKey="Id", IsForeignKey=true)]
		public Rasa Rasa
		{
			get
			{
				return this._Rasa.Entity;
			}
			set
			{
				Rasa previousValue = this._Rasa.Entity;
				if (((previousValue != value) 
							|| (this._Rasa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rasa.Entity = null;
						previousValue.Zwierze.Remove(this);
					}
					this._Rasa.Entity = value;
					if ((value != null))
					{
						value.Zwierze.Add(this);
						this._id_rasa = value.Id;
					}
					else
					{
						this._id_rasa = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rasa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rozrod(Rozrod entity)
		{
			this.SendPropertyChanging();
			entity.Zwierze = this;
		}
		
		private void detach_Rozrod(Rozrod entity)
		{
			this.SendPropertyChanging();
			entity.Zwierze = null;
		}
		
		private void attach_Rozliczenia(Rozliczenia entity)
		{
			this.SendPropertyChanging();
			entity.Zwierze = this;
		}
		
		private void detach_Rozliczenia(Rozliczenia entity)
		{
			this.SendPropertyChanging();
			entity.Zwierze = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rozrod")]
	public partial class Rozrod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Data;
		
		private byte _czyRuja;
		
		private int _id_zwierze;
		
		private EntityRef<Zwierze> _Zwierze;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    partial void OnczyRujaChanging(byte value);
    partial void OnczyRujaChanged();
    partial void Onid_zwierzeChanging(int value);
    partial void Onid_zwierzeChanged();
    #endregion
		
		public Rozrod()
		{
			this._Zwierze = default(EntityRef<Zwierze>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="DateTime NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_czyRuja", DbType="TinyInt NOT NULL")]
		public byte czyRuja
		{
			get
			{
				return this._czyRuja;
			}
			set
			{
				if ((this._czyRuja != value))
				{
					this.OnczyRujaChanging(value);
					this.SendPropertyChanging();
					this._czyRuja = value;
					this.SendPropertyChanged("czyRuja");
					this.OnczyRujaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zwierze", DbType="Int NOT NULL")]
		public int id_zwierze
		{
			get
			{
				return this._id_zwierze;
			}
			set
			{
				if ((this._id_zwierze != value))
				{
					if (this._Zwierze.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_zwierzeChanging(value);
					this.SendPropertyChanging();
					this._id_zwierze = value;
					this.SendPropertyChanged("id_zwierze");
					this.Onid_zwierzeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zwierze_Rozrod", Storage="_Zwierze", ThisKey="id_zwierze", OtherKey="Id", IsForeignKey=true)]
		public Zwierze Zwierze
		{
			get
			{
				return this._Zwierze.Entity;
			}
			set
			{
				Zwierze previousValue = this._Zwierze.Entity;
				if (((previousValue != value) 
							|| (this._Zwierze.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zwierze.Entity = null;
						previousValue.Rozrod.Remove(this);
					}
					this._Zwierze.Entity = value;
					if ((value != null))
					{
						value.Rozrod.Add(this);
						this._id_zwierze = value.Id;
					}
					else
					{
						this._id_zwierze = default(int);
					}
					this.SendPropertyChanged("Zwierze");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rozliczenia")]
	public partial class Rozliczenia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _data;
		
		private string _opis;
		
		private System.Nullable<short> _ilosc_litrow;
		
		private System.Nullable<int> _id_zwierze;
		
		private System.Nullable<int> _id_kategoria;
		
		private System.Nullable<int> _id_stado;
		
		private System.Nullable<double> _kwota;
		
		private EntityRef<Kategoria_rozliczen> _Kategoria_rozliczen;
		
		private EntityRef<Stado> _Stado;
		
		private EntityRef<Zwierze> _Zwierze;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OndataChanging(System.DateTime value);
    partial void OndataChanged();
    partial void OnopisChanging(string value);
    partial void OnopisChanged();
    partial void Onilosc_litrowChanging(System.Nullable<short> value);
    partial void Onilosc_litrowChanged();
    partial void Onid_zwierzeChanging(System.Nullable<int> value);
    partial void Onid_zwierzeChanged();
    partial void Onid_kategoriaChanging(System.Nullable<int> value);
    partial void Onid_kategoriaChanged();
    partial void Onid_stadoChanging(System.Nullable<int> value);
    partial void Onid_stadoChanged();
    partial void OnkwotaChanging(System.Nullable<double> value);
    partial void OnkwotaChanged();
    #endregion
		
		public Rozliczenia()
		{
			this._Kategoria_rozliczen = default(EntityRef<Kategoria_rozliczen>);
			this._Stado = default(EntityRef<Stado>);
			this._Zwierze = default(EntityRef<Zwierze>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="Date NOT NULL")]
		public System.DateTime data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opis", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string opis
		{
			get
			{
				return this._opis;
			}
			set
			{
				if ((this._opis != value))
				{
					this.OnopisChanging(value);
					this.SendPropertyChanging();
					this._opis = value;
					this.SendPropertyChanged("opis");
					this.OnopisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ilosc_litrow", DbType="SmallInt")]
		public System.Nullable<short> ilosc_litrow
		{
			get
			{
				return this._ilosc_litrow;
			}
			set
			{
				if ((this._ilosc_litrow != value))
				{
					this.Onilosc_litrowChanging(value);
					this.SendPropertyChanging();
					this._ilosc_litrow = value;
					this.SendPropertyChanged("ilosc_litrow");
					this.Onilosc_litrowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zwierze", DbType="Int")]
		public System.Nullable<int> id_zwierze
		{
			get
			{
				return this._id_zwierze;
			}
			set
			{
				if ((this._id_zwierze != value))
				{
					if (this._Zwierze.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_zwierzeChanging(value);
					this.SendPropertyChanging();
					this._id_zwierze = value;
					this.SendPropertyChanged("id_zwierze");
					this.Onid_zwierzeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_kategoria", DbType="Int")]
		public System.Nullable<int> id_kategoria
		{
			get
			{
				return this._id_kategoria;
			}
			set
			{
				if ((this._id_kategoria != value))
				{
					if (this._Kategoria_rozliczen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_kategoriaChanging(value);
					this.SendPropertyChanging();
					this._id_kategoria = value;
					this.SendPropertyChanged("id_kategoria");
					this.Onid_kategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_stado", DbType="Int")]
		public System.Nullable<int> id_stado
		{
			get
			{
				return this._id_stado;
			}
			set
			{
				if ((this._id_stado != value))
				{
					if (this._Stado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_stadoChanging(value);
					this.SendPropertyChanging();
					this._id_stado = value;
					this.SendPropertyChanged("id_stado");
					this.Onid_stadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kwota", DbType="Float")]
		public System.Nullable<double> kwota
		{
			get
			{
				return this._kwota;
			}
			set
			{
				if ((this._kwota != value))
				{
					this.OnkwotaChanging(value);
					this.SendPropertyChanging();
					this._kwota = value;
					this.SendPropertyChanged("kwota");
					this.OnkwotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategoria_rozliczen_Rozliczenia", Storage="_Kategoria_rozliczen", ThisKey="id_kategoria", OtherKey="Id", IsForeignKey=true)]
		public Kategoria_rozliczen Kategoria_rozliczen
		{
			get
			{
				return this._Kategoria_rozliczen.Entity;
			}
			set
			{
				Kategoria_rozliczen previousValue = this._Kategoria_rozliczen.Entity;
				if (((previousValue != value) 
							|| (this._Kategoria_rozliczen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kategoria_rozliczen.Entity = null;
						previousValue.Rozliczenia.Remove(this);
					}
					this._Kategoria_rozliczen.Entity = value;
					if ((value != null))
					{
						value.Rozliczenia.Add(this);
						this._id_kategoria = value.Id;
					}
					else
					{
						this._id_kategoria = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kategoria_rozliczen");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stado_Rozliczenia", Storage="_Stado", ThisKey="id_stado", OtherKey="Id", IsForeignKey=true)]
		public Stado Stado
		{
			get
			{
				return this._Stado.Entity;
			}
			set
			{
				Stado previousValue = this._Stado.Entity;
				if (((previousValue != value) 
							|| (this._Stado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Stado.Entity = null;
						previousValue.Rozliczenia.Remove(this);
					}
					this._Stado.Entity = value;
					if ((value != null))
					{
						value.Rozliczenia.Add(this);
						this._id_stado = value.Id;
					}
					else
					{
						this._id_stado = default(Nullable<int>);
					}
					this.SendPropertyChanged("Stado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zwierze_Rozliczenia", Storage="_Zwierze", ThisKey="id_zwierze", OtherKey="Id", IsForeignKey=true)]
		public Zwierze Zwierze
		{
			get
			{
				return this._Zwierze.Entity;
			}
			set
			{
				Zwierze previousValue = this._Zwierze.Entity;
				if (((previousValue != value) 
							|| (this._Zwierze.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zwierze.Entity = null;
						previousValue.Rozliczenia.Remove(this);
					}
					this._Zwierze.Entity = value;
					if ((value != null))
					{
						value.Rozliczenia.Add(this);
						this._id_zwierze = value.Id;
					}
					else
					{
						this._id_zwierze = default(Nullable<int>);
					}
					this.SendPropertyChanged("Zwierze");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gatunek")]
	public partial class Gatunek : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _nazwa;
		
		private System.Nullable<byte> _czyStado;
		
		private EntitySet<Rasa> _Rasa;
		
		private EntitySet<Stado> _Stado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnazwaChanging(string value);
    partial void OnnazwaChanged();
    partial void OnczyStadoChanging(System.Nullable<byte> value);
    partial void OnczyStadoChanged();
    #endregion
		
		public Gatunek()
		{
			this._Rasa = new EntitySet<Rasa>(new Action<Rasa>(this.attach_Rasa), new Action<Rasa>(this.detach_Rasa));
			this._Stado = new EntitySet<Stado>(new Action<Stado>(this.attach_Stado), new Action<Stado>(this.detach_Stado));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa", DbType="VarChar(30)")]
		public string nazwa
		{
			get
			{
				return this._nazwa;
			}
			set
			{
				if ((this._nazwa != value))
				{
					this.OnnazwaChanging(value);
					this.SendPropertyChanging();
					this._nazwa = value;
					this.SendPropertyChanged("nazwa");
					this.OnnazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_czyStado", DbType="TinyInt")]
		public System.Nullable<byte> czyStado
		{
			get
			{
				return this._czyStado;
			}
			set
			{
				if ((this._czyStado != value))
				{
					this.OnczyStadoChanging(value);
					this.SendPropertyChanging();
					this._czyStado = value;
					this.SendPropertyChanged("czyStado");
					this.OnczyStadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gatunek_Rasa", Storage="_Rasa", ThisKey="Id", OtherKey="id_gatunek")]
		public EntitySet<Rasa> Rasa
		{
			get
			{
				return this._Rasa;
			}
			set
			{
				this._Rasa.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gatunek_Stado", Storage="_Stado", ThisKey="Id", OtherKey="id_gatunek")]
		public EntitySet<Stado> Stado
		{
			get
			{
				return this._Stado;
			}
			set
			{
				this._Stado.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rasa(Rasa entity)
		{
			this.SendPropertyChanging();
			entity.Gatunek = this;
		}
		
		private void detach_Rasa(Rasa entity)
		{
			this.SendPropertyChanging();
			entity.Gatunek = null;
		}
		
		private void attach_Stado(Stado entity)
		{
			this.SendPropertyChanging();
			entity.Gatunek = this;
		}
		
		private void detach_Stado(Stado entity)
		{
			this.SendPropertyChanging();
			entity.Gatunek = null;
		}
	}
}
#pragma warning restore 1591
